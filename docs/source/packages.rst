Lua-интерфейс Renga
===================

Скрипты, описывающие геометрическое представление шаблона стиля, расположение портов и поведение параметров из файла описания параметров JSON, создаются в отдельном файле с расширением LUA. Описанию встроенных функций, взаимодействующих с Renga, посвященна данная часть руководства.

.. note:: Кроме использования встроенных функций, разработчики могут использовать в скриптах любые стандартные библиотеки Lua, например, математическую библиотеку `math <http://lua-users.org/wiki/MathLibraryTutorial>`_.

**Style Template API** предоставляет средства для описания шаблонов стилей (объекты, классы, функции и системные перечисления). Функции, создающие различные геометрические примитивы в Renga, а также системные перечисления (*enums*), доступны в любой части скрипта. Условно можно сказать, что они относятся к глобальному пространству имён (или в терминах Lua — в *глобальном окружении*). Также выделяются в отдельное пространство имён ``Style`` функции для работы с текущим стилем:

.. note:: Подробнее см. `справочное руководство Renga STDL <https://help.rengabim.com/stdl/ru/modules.html>`_

.. table:: Style Template API
   
    +-------------------+-----------------------------------------------------------------------------------------------+
    | Namespace         | Объекты                                                                                       |
    +===================+===============================================================================================+
    | *глобальный*      | :doc:`Модельная геометрия </modelgeometry>`                                                   |    
    |                   +-----------------------------------------------+-----------------------------------------------+    
    |  *глобальный*     | Функции, порождающие                          | :doc:`Базовые типы геометрии </basetypes>`    | 
    |                   |                                               +-----------------------------------------------+
    |                   | геометрические примитивы                      | :doc:`Графические примитивы </symbolic>`      |    
    |                   |                                               +-----------------------------------------------+
    |                   |                                               | :doc:`Планарная геометрия </planar>`          |
    |                   |                                               +-----------------------------------------------+
    |                   |                                               | :doc:`Твёрдотельная 3D-геометрия </geometry>` |    
    |                   +-----------------------------------------------+-----------------------------------------------+
    |                   | :doc:`Системные перечисления </coreenums>`                                                    |
    |                   +-----------------------------------------------------------------------------------------------+
    |                   | :doc:`Вспомогательные функции </auxiliary>`                                                   |
    +-------------------+-----------------------------------------------------------------------------------------------+
    | Style             | Функции для работы с текущим стилем                                                           |
    +-------+-----------+-----------------------------------------------------------------------------------------------+
    |       | Parameter | Таблицы групп параметров *(определенных в JSON)*                                              |
    |       +-----------+-----------------------------------------------------------------------------------------------+
    |       | Port      | :doc:`Точки подключения (порты) оборудования </ports>`                                        |
    +-------+-----------+-----------------------------------------------------------------------------------------------+

Общие примеры:

.. code-block:: lua
    :caption: Пример 1. Создание твердотельной 3D-геометрии в виде сферы, радиусом ``radius`` и с центром в точке ``origin``:
    :linenos:

    local solid = CreateSphere(radius, origin)

.. code-block:: lua
    :caption: Пример 2. Создание экземпляра планарной геометрии GeometrySet2D() :
    :linenos:

    local planarGeometry = GeometrySet2D()

.. code-block:: lua
    :caption: Пример 3. Создание точки в трёхмерном пространстве:
    :linenos:

    local origin = Point3D(x, y, z)

Функции для работы с текущим стилем
-----------------------------------

Пространство имён ``Style`` (или в терминах Lua - *таблица*) содержит функции, которые создают различный уровень детализации стиля (детальный, условный или символьный), а также функции, управляющие доступом к :ref:`параметрам <access_to_parameters>` и :ref:`портам <access_to_ports>`.

Таблицы ``Parameters`` и ``Ports`` также являются объектами таблицы ``Style``.

Добавить детальную модельную геометрию объекта в стиль
""""""""""""""""""""""""""""""""""""""""""""""""""""""

.. lua:function:: SetDetailedGeometry(detailedGeometry)

    :param detailedGeometry: Задает :doc:`модельную геометрию <../modelgeometry>`.
    :type detailedGeometry: ModelGeometry

.. code-block:: lua
    :caption: Пример 4. Добавление детальной модельной геометрии в стиль:
    :linenos:

    Style.SetDetailedGeometry(detailedGeometry)

Добавить условную модельную геометрию объекта в стиль
"""""""""""""""""""""""""""""""""""""""""""""""""""""

.. lua:function:: SetSymbolicGeometry(symbolicGeometry)

    :param symbolicGeometry: Задает :doc:`модельную геометрию <../modelgeometry>`.
    :type detailedGeometry: ModelGeometry

.. code-block:: lua
    :caption: Пример 5. Добавление условной модельной геометрии в стиль:
    :linenos:

    Style.SetSymbolicGeometry(symbolicGeometry)

Добавить символьную модельную геометрию объекта в стиль
"""""""""""""""""""""""""""""""""""""""""""""""""""""""

.. lua:function:: SetSymbolGeometry(symbolGeometry)

    :param symbolGeometry: Задает :doc:`модельную геометрию <../modelgeometry>`.
    :type detailedGeometry: ModelGeometry

.. code-block:: lua
    :caption: Пример 5. Добавление символьной модельной геометрии в стиль:
    :linenos:

    Style.SetSymbolGeometry(symbolGeometry)
